{
  "entities": {
    "Invoice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Invoice",
      "type": "object",
      "description": "Represents an invoice issued by the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Invoice entity."
        },
        "invoiceNumber": {
          "type": "string",
          "description": "Unique invoice number."
        },
        "date": {
          "type": "string",
          "description": "Date the invoice was issued.",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "description": "Date the invoice is due.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Total amount of the invoice."
        },
        "description": {
          "type": "string",
          "description": "Description of the invoice."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Invoice)"
        }
      },
      "required": [
        "id",
        "invoiceNumber",
        "date",
        "dueDate",
        "amount",
        "userId"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense incurred by the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Expense entity."
        },
        "date": {
          "type": "string",
          "description": "Date the expense was incurred.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the expense."
        },
        "description": {
          "type": "string",
          "description": "Description of the expense."
        },
        "category": {
          "type": "string",
          "description": "Category of the expense (e.g., Travel, Supplies)."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Expense)"
        }
      },
      "required": [
        "id",
        "date",
        "amount",
        "description",
        "category",
        "userId"
      ]
    },
    "Report": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Report",
      "type": "object",
      "description": "Represents a financial report generated by the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Report entity."
        },
        "reportType": {
          "type": "string",
          "description": "Type of report (e.g., Income Statement, Balance Sheet)."
        },
        "dateGenerated": {
          "type": "string",
          "description": "Date the report was generated.",
          "format": "date-time"
        },
        "data": {
          "type": "string",
          "description": "The report data, stored as a JSON string."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Report)"
        }
      },
      "required": [
        "id",
        "reportType",
        "dateGenerated",
        "data",
        "userId"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  This collection holds general user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/invoices/{invoiceId}",
        "definition": {
          "entityName": "Invoice",
          "schema": {
            "$ref": "#/backend/entities/Invoice"
          },
          "description": "Stores invoices issued by the user. Each invoice is associated with a specific user ID, enforcing path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "invoiceId",
              "description": "The unique identifier of the invoice."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expenses incurred by the user. Each expense is associated with a specific user ID, enforcing path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier of the expense."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/reports/{reportId}",
        "definition": {
          "entityName": "Report",
          "schema": {
            "$ref": "#/backend/entities/Report"
          },
          "description": "Stores financial reports generated for the user. Each report is associated with a specific user ID, enforcing path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "reportId",
              "description": "The unique identifier of the report."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to securely store user-specific accounting data, including invoices, expenses, and reports. It leverages path-based ownership for data isolation and simplified security rules, ensuring only the authenticated user can access their own data. By structuring the data in this way, we achieve Authorization Independence. Each collection is namespaced under the user's ID, removing the need for complex `get()` calls in security rules, which could hinder atomic operations. All list operations are secure via path-based ownership, thus satisfying the QAPs.\n\nThe structure also supports the invariant that only the user owns the records."
  }
}